"558bec56ff75??8bf1e8????????8b46":
__thiscall void Entity_Slot::Render(Vector *offset);

"558bec81ec94000000a1":
__thiscall void Entity_Slot::CreateDropsFromExplosion();

"558bec83e4f8518b4508538b":
__thiscall void Entity_Slot::SetPrizeCollectible(int CollectibleType);


struct Entity_Slot depends (ANM2) : public Entity { {{
	inline int* GetState() { return &this->_state; }
	inline int* GetPrizeType() { return &this->_prizeType; }
	inline short* GetTimeout() { return &this->_timeout; }
	inline int* GetDonationValue() { return &this->_donationValue; }
	inline unsigned short* GetTouch() { return &this->_touch; }
	inline int* GetPrizeCollectible() { return &this->_prizeCollectible; }
}}
    __vtable {
		skip; // Free
		
        override
        "558beca1????????81":
        void Init(unsigned int Type, unsigned int Variant, unsigned int SubType, unsigned int Seed);
		
		skip; // PreUpdate
		
        override
        "558bec6aff68????????64a1????????5081ecc0000000a1????????33c58945??535657508d45??64a3????????8bf989bd":
        void Update();
		
		skip; // Interpolate
		skip; // Render
		skip; // RenderShadowLayer
		skip; // PostRender
		
		override
		"558bec83e4f881ec8c000000a1????????33c4898424????????538bd95657895c24??8b4b":
		bool TakeDamage(float Damage, unsigned long long DamageFlags, EntityRef *Source, int DamageCountdown);
		
		skip; // Kill
		skip; // Remove
		skip; // TriggerGlowingHourglass
		skip; // ???
		skip; // GetRenderZ
		skip; // CanOverwrite
		skip; // SetColor
		skip; // SetCollisionDamage
		skip; // ClearReferences
		skip; // CanShutDoors
		skip; // IsBoss
		skip; // IsValidTarget
		skip; // TryThrow
		skip; // GetForwardVector
		
        "558bec83e4f883ec3c83":
        bool HandleCollision(Entity *Collider, bool Low);
		
		skip; // ResetColor
		skip; // LoadEntityConfig
    };
	
	int _state : 0x410;
	int _prizeType : 0x414;
	short _shellGameAnimationIndex : 0x41a;
	short _timeout : 0x41c;
	int _donationValue : 0x420;
	uint32_t _triggerTimer : 0x424;
	short _unkShort1 : 0x428;
	uint16_t _touch : 0x42a;
	ANM2 _prizeAnm2 : 0x42c;
	int _prizeCollectible : 0x540;
} : 0x548;
